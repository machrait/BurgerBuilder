{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispath","actions","withErrorHandler","axios","module","exports"],"mappings":"gMAiCeA,EA5BD,SAACC,GAEd,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAEhCA,EAAYE,KAAK,CAChBC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAE5B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GAEvC,OAAO,0BACJC,MAAO,CACNC,cAAc,aACdC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEVC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARd,KAQsBI,EAAGH,OARzB,QAUT,OACO,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GAC1B,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,wCCrB3DC,E,kLAIJC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAKtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAWb,OAVIL,KAAKxB,MAAM8B,UAEdF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAAK,OAEnC,kBAACmB,EAAD,CACCH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAIf,6BACEO,O,GAtBgBI,aAyCNC,uBAdS,SAAAC,GACvB,MAAO,CACNN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAGM,SAAAS,GAC1B,MAAO,CACNX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAAQC,IAAoBX,EAAOC,QAIxDM,CAA4CK,YAAiBf,EAAQgB,O,mBChDpFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.84aa8206.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Order.module.css';\n\n\nconst order = (props) => \n{\n\tconst ingredients = [];\n\tfor (let ingredientName in props.ingredients)\n\t{\n\t\tingredients.push({\n\t\t\tname: ingredientName,\n\t\t\tamount: props.ingredients[ingredientName]});\n\t}\n\tconst ingredientOutput = ingredients.map(ig =>\n\t\t{\n\t\t\treturn <span \n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextTransform:'capitalize',\n\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\t\t\t\tpadding: '5px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkey={ig.name}>{ig.name} ({ig.amount})</span>;\n\t\t});\n\treturn (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n}\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component \n{\n\tcomponentDidMount()\n\t{\n\t\tthis.props.onFetchOrders(this.props.token, this.props.userId);\n\t}\n\t\n\trender() \n\t{\n\t\tlet orders = <Spinner/>;\n\t\tif(!this.props.loading)\n\t\t{\n\t\t\torders = this.props.orders.map(order => \n\t\t\t(\n\t\t\t\t<Order \n\t\t\t\t\tkey={order.id}\n\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\tprice={order.price}/>\n\t\t\t));\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{orders}\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.order.orders,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId\n\t}\n}\nconst mapDispatchToProps = dispath => {\n\treturn {\n\t\tonFetchOrders: (token, userId) => dispath(actions.fetchOrders(token, userId)),\n\t}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};"],"sourceRoot":""}